########################################################
# Types
type Plan {
    name: String!
    slug: String!
    description: String
    amount: Float!
    type: String
    createdAt: DateTime! @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
}

type SubscriptionItem {
    plan: Plan!
    last_charged: DateTime
    createdAt: DateTime! @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
}

extend type User {
    subscriptions: [SubscriptionItem!]!
}

########################################################
# Inputs
input PlanInput {
    name: String!
    slug: String!
    description: String
    amount: Float!
    type: String
}

########################################################
# Query
extend type Query {
    plans: [Plan!]! @paginate(model: "Marqant\\MarqantPaySubscriptions\\Models\\Plan") # @middleware(checks: ["auth:api"])
    plan(slug: String! @eq): Plan @find(model: "Marqant\\MarqantPaySubscriptions\\Models\\Plan") # @middleware(checks: ["auth:api"])
}

########################################################
# Mutation
extend type Mutation {
    subscribeUser(email: String!, plan: String!): User
    unsubscribeUser(email: String!, plan: String!): User
}

